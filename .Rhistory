b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(attributes$yod) | attributes$yod >= (years[i]+1),1,0)
female_data <- list()
female_data <- list()
for(i in 1:length(years)){
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colSums(m)
str_f <- colSums(m[,sex==0&age>=9])
str_m <- colSums(m[,sex==1&age>=9])
str_i <- colSums(m[,age<10])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(attributes$yod) | attributes$yod >= (years[i]+1),1,0)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- as.numeric(scale(str))
str_f <- as.numeric(scale(str_f))
str_m <- as.numeric(scale(str_m))
str_i <- as.numeric(scale(str_i))
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
}
warnings()
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colSums(m)
str_f <- colSums(m[,sex==0&age>=9])
str_m <- colSums(m[,sex==1&age>=9])
str_i <- colSums(m[,age<10])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
length(id)
length(age)
length(sex)
length(b0)
length(b1)
length(b2)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colSums(m)
str_f <- colSums(m[,sex==0&age>=9])
str_m <- colSums(m[,sex==1&age>=9])
str_i <- colSums(m[,age<10])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(attributes$yod) | attributes$yod >= (years[i]+1),1,0)
length(die)
female_data <- list()
for(i in 1:length(years)){
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colSums(m)
str_f <- colSums(m[,sex==0&age>=9])
str_m <- colSums(m[,sex==1&age>=9])
str_i <- colSums(m[,age<10])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(yod) | yod >= (years[i]+1),1,0)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- as.numeric(scale(str))
str_f <- as.numeric(scale(str_f))
str_m <- as.numeric(scale(str_m))
str_i <- as.numeric(scale(str_i))
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
}
length(id)
i = 1
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colSums(m)
str_f <- colSums(m[,sex==0&age>=9])
str_m <- colSums(m[,sex==1&age>=9])
str_i <- colSums(m[,age<10])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(yod) | yod > (years[i]+1),0,1)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- as.numeric(scale(str))
str_f <- as.numeric(scale(str_f))
str_m <- as.numeric(scale(str_m))
str_i <- as.numeric(scale(str_i))
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
female_data <- list()
for(i in 1:length(years)){
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colSums(m)
str_f <- colSums(m[,sex==0&age>=9])
str_m <- colSums(m[,sex==1&age>=9])
str_i <- colSums(m[,age<10])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(yod) | yod > (years[i]+1),0,1)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- as.numeric(scale(str))
str_f <- as.numeric(scale(str_f))
str_m <- as.numeric(scale(str_m))
str_i <- as.numeric(scale(str_i))
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
}
female_data <- do.call(rbind,female_data)
require(mgcv)
gam(b1 ~ s(age) + s(id,bs="re") + s(year) + str, data = female_data, family = binomial())
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year) + str, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year) + str_f + str_m + str_i, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + str_f + str_m + str_i, data = female_data, family = binomial()))
plot(gam(b1 ~ s(age) + s(id,bs="re") + str_f + str_m + str_i, data = female_data, family = binomial()))
nrow(female_data)
sum(female_data$b1)
female_data$year <- as.factor(female_data$year)
plot(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_f + str_m + str_i, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_f + str_m + str_i, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_f, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_m, data = female_data, family = binomial()))
female_data <- list()
for(i in 1:length(years)){
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colMeans(m)
str_f <- colMeans(m[,sex==0&age>=15])
str_m <- colMeans(m[,sex==1&age>=15])
str_i <- colMeans(m[,age<15])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(yod) | yod > (years[i]+1),0,1)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- as.numeric(scale(str))
str_f <- as.numeric(scale(str_f))
str_m <- as.numeric(scale(str_m))
str_i <- as.numeric(scale(str_i))
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
}
female_data <- do.call(rbind,female_data)
female_data$year <- as.factor(female_data$year)
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_m, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_f, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_i, data = female_data, family = binomial()))
female_data <- list()
for(i in 1:length(years)){
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colMeans(m)
str_f <- colMeans(m[,sex==0&age>=15])
str_m <- colMeans(m[,sex==1&age>=15])
str_i <- colMeans(m[,age<15])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(yod) | yod > (years[i]+1),0,1)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
}
female_data <- do.call(rbind,female_data)
female_data$year <- as.factor(female_data$year)
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_m, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_j, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_i, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re")+ str_f, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re"), data = female_data, family = binomial()))
plot(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re"), data = female_data, family = binomial()))
source("C:/Users/mw607/OneDrive - University of Exeter/General code/load_broadscale_networks.R")
female_data <- list()
for(i in 1:length(years)){
m <- matrices[[i]]
id <- colnames(matrices[[i]])
age <- years[i] - attributes$yob[match(id,attributes$id)]
sex <- attributes$sex..0...females..1...males..2...uknown.[match(id,attributes$id)]
str <- colMeans(m)
str_f <- colMeans(m[,sex==0&age>=15])
str_m <- colMeans(m[,sex==1&age>=15])
str_i <- colMeans(m[,age<15])
b0 <- sapply(id,function(z) {ifelse(
any(attributes$yob == years[i] & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b1 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+1) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
b2 <- sapply(id,function(z) {ifelse(
any(attributes$yob == (years[i]+2) & !is.na(attributes$mother) & as.character(attributes$mother) == z), 1, 0
)})
yod <- attributes$yod[match(id,attributes$id)]
die <- ifelse(is.na(yod) | yod > (years[i]+1),0,1)
id <- id[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
b1 <- b1[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_f <- str_f[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_m <- str_m[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str_i <- str_i[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
str <- str[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
age <- age[sex == 0 & age >= 9 & age <= 45 & die == 0 & b0 == 0 & b2 == 0]
female_data[[i]] <- data.frame(id,age,str,str_f,str_m,str_i,b1,year=years[i])
}
female_data <- do.call(rbind,female_data)
female_data$year <- as.factor(female_data$year)
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re"), data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re") + str_f, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re") + str_f + str_m, data = female_data, family = binomial()))
summary(gam(b1 ~ s(age) + s(id,bs="re") + s(year,bs = "re") + str_f + str_m + str_i, data = female_data, family = binomial()))
Den <- rpois(1000,lambda=50)+1
Num <- rbinom(n = 1000, size = Den, prob = runif(1000,0,1))
#' This function calculates and returns the standard error and confidence interval for the estimated social differentiation and correlation. This is based on the inverse Hessian matrix from the optimization routine. Note that a bootstrap of the raw data may be more robust.
#'
#' @return A matrix containing the estimated social differentiation, the CV of the observed associations, and the estimated correlation between true and observed association indices, along with standard errors and confidence intervals.
#'
#' @examples
#' X <- get_numerator(srkw_sightings, return = "vector", data_format = "GBI")
#' D <- get_denominator(srkw_sightings, return = "vector", data_format = "GBI")
#' social_differentiation(X, D, method = "Beta-binomial")
#'
#' @export
social_differentiation <- function(Num, Den, method = c("Whitehead","Beta-binomial"), res = 0.001,  initial.params = c(0.1,0.1)){
if(length(method) > 1) method <- method[1]
if(!method %in% c("Whitehead","Beta-binomial")) method <- "Whitehead"
X <- Num
D <- Den
#likelihood functions for social differentiation
LL.whitehead <- function(z, X, D, delt){
a <- exp(z[1])
b <- exp(z[2])
deltint <- as.vector(seq(from = delt, to = 1 - delt, by = delt))
D <- as.matrix(D)
X <- as.matrix(X)
deltint <- as.vector(seq(from = delt, to = 1 - delt, by = delt)) #vector of values in [0,1]
ndel <- length(deltint)
nX <- length(X)
XX <- X %*% t(rep(1, ndel))
DD <- D %*% t(rep(1, ndel))
deldel <- rep(1, nX) %*% t(deltint)
rrx <- suppressWarnings(stats::dbeta(deltint, a, b)) #density for beta
I <- ((deldel^XX)*((1-deldel)^(DD-XX))) %*% rrx
I <- sum(log(I))
-I
}
LL.betabinom <- function(z, X, D){
a <- exp(z[1])
b <- exp(z[2])
ll <- VGAM::dbetabinom.ab(X, size = D, shape1 = a, shape2 = b, log = T)
I <- sum(ll)
-I
}
#get parameter estimates
if(method == "Whitehead"){
result <- stats::optim(initial.params, fn = LL.whitehead, X = X, D = D, delt = res, hessian = T) #MLE for all AIs
}
if(method == "Beta-binomial"){
result <- stats::optim(initial.params, fn = LL.betabinom, X = X, D = D, hessian = T) #MLE for all AIs
}
a <- exp(result$par[1])
b <- exp(result$par[2])
mean.fit <- a/(a+b)
sd.fit <- sqrt((a*b)/((a+b)^2*(a+b+1)))
estimate <- sd.fit/mean.fit
observed <- stats::sd(X/D)/mean(X/D)
correlation <- estimate/observed
samp <- MASS::mvrnorm(n = 100000, mu = result$par, Sigma = solve(result$hessian))
cv.samp <- apply(samp,1,function(z){
a <- exp(z[1])
b <- exp(z[2])
mean.fit = a/(a+b)
sd.fit = sqrt((a*b)/((a+b)^2*(a+b+1)))
sd.fit/mean.fit
})
se_S <- sd(cv.samp, na.rm = T)
se_r <- sd(cv.samp/observed, na.rm = T)
ci_S <- quantile(cv.samp, c(0.025,0.975), na.rm = T)
ci_r <- quantile(cv.samp/observed, c(0.025,0.975), na.rm = T)
summary <- matrix(nrow = 3, ncol = 4)
row.names(summary) <- c("Observed CV","Social Differentiation", "Correlation")
colnames(summary) <- c("Estimate", "SE", "Lower CI", "Upper CI")
summary[1,1] <- observed
summary[2,1] <- estimate
summary[2,2] <- se_S
summary[2,c(3,4)] <- ci_S
summary[3,1] <- correlation
summary[3,2] <- se_r
summary[3,c(3,4)] <- ci_r
return(summary)
}
social_differentiation(Num,Den)
social_differentiation(Num,Den,method="Beta-binomial")
social_differentiation(Num,Den,method="Whitehead")
Den <- rpois(1000,lambda=10)+1
Num <- rbinom(n = 1000, size = Den, prob = runif(1000,0,1))
social_differentiation(Num,Den,method="Beta-binomial")
social_differentiation(Num,Den,method="Whitehead")
b <- c(0,1,0)
arr <- array(data = c(1,1,1,1,1,1,1,1) dim = c(3,2,2))
arr <- array(data = c(1,1,1,1,1,1,1,1), dim = c(3,2,2))
arr
arr <- array(data = c(1,1,0,1,0,0,1,1,0,1,0,1), dim = c(3,2,2))
arr
arr[1,,]
arr[2,,]
arr[3,,]
arr[4,,]
b%*%arr
b%*%t(arr)
arr%*%b
arr%*%t(b)
0.557+0.186
play_monty_hall <- function(strat=1){
car <- sample(3,1)
init_choice <- sample(3,1)
if(init_choice == car){
reveal <- sample(which(1:3 != car),1)
}else{
reveal <- which(1:3 != car & 1:3 != init_choice)
}
if(strat == 1){
choice <- which(1:3 != reveal & 1:3 != init_choice)
}
if(strat == 2){
choice <- init_choice
}
if(strat == 3){
choice <- sample(which(1:3 != reveal),1)
}
success <- ifelse(choice == car, 1, 0)
return(success)
}
play_monty_hall <- function(strat=1){
car <- sample(3,1)
init_choice <- sample(3,1)
if(init_choice == car){
reveal <- sample(which(1:3 != car),1)
}else{
reveal <- which(1:3 != car & 1:3 != init_choice)
}
if(strat == 1){
choice <- which(1:3 != reveal & 1:3 != init_choice)
}
if(strat == 2){
choice <- init_choice
}
if(strat == 3){
choice <- sample(which(1:3 != reveal),1)
}
success <- ifelse(choice == car, 1, 0)
return(success)
}
succ_1 <- succ_2 <- succ_3 <- NA
for(i in 1:100000){
succ_1[i] <- play_monty_hall(strat = 1)
succ_2[i] <- play_monty_hall(strat = 2)
succ_2[i] <- play_monty_hall(strat = 3)
}
succ_1
mean(succ_1)
mean(succ_2)
mean(succ_3)
play_monty_hall <- function(strat=1){
car <- sample(3,1)
init_choice <- sample(3,1)
if(init_choice == car){
reveal <- sample(which(1:3 != car),1)
}else{
reveal <- which(1:3 != car & 1:3 != init_choice)
}
if(strat == 1){
choice <- which(1:3 != reveal & 1:3 != init_choice)
}
if(strat == 2){
choice <- init_choice
}
if(strat == 3){
choice <- sample(which(1:3 != reveal),1)
}
success <- ifelse(choice == car, 1, 0)
return(success)
}
succ_1 <- succ_2 <- succ_3 <- NA
for(i in 1:100000){
succ_1[i] <- play_monty_hall(strat = 1)
succ_2[i] <- play_monty_hall(strat = 2)
succ_3[i] <- play_monty_hall(strat = 3)
}
succ_2
mean(succ_2)
mean(succ_1)
mean(succ_3)
car <- sample(3,1)
init_choice <- sample(3,1)
if(init_choice == car){
reveal <- sample(which(1:3 != car),1)
}else{
reveal <- which(1:3 != car & 1:3 != init_choice)
}
car
init_choice
reveal
